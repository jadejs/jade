// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pug .compileClient() should support module syntax in pug.compileClient(str, options) when inlineRuntimeFunctions it false 1`] = `
"var pug = require(\\"pug-runtime\\");
function template(locals) {
  var pug_html = \\"\\",
    pug_mixins = {},
    pug_interp;
  var pug_debug_filename, pug_debug_line;
  try {
    var self = locals || {};
    pug_debug_line = 1;
    pug_html = pug_html + '\\\\u003Cdiv class=\\"bar\\"\\\\u003E';
    pug_debug_line = 1;
    pug_html =
      pug_html +
      pug.escape(null == (pug_interp = self.foo) ? \\"\\" : pug_interp) +
      \\"\\\\u003C\\\\u002Fdiv\\\\u003E\\";
  } catch (err) {
    pug.rethrow(err, pug_debug_filename, pug_debug_line);
  }
  return pug_html;
}
module.exports = template;
"
`;

exports[`pug .compileClient() should support module syntax in pug.compileClient(str, options) when inlineRuntimeFunctions it true 1`] = `
"function pug_escape(e) {
  var a = \\"\\" + e,
    t = pug_match_html.exec(a);
  if (!t) return e;
  var r,
    c,
    n,
    s = \\"\\";
  for (r = t.index, c = 0; r < a.length; r++) {
    switch (a.charCodeAt(r)) {
      case 34:
        n = \\"&quot;\\";
        break;
      case 38:
        n = \\"&amp;\\";
        break;
      case 60:
        n = \\"&lt;\\";
        break;
      case 62:
        n = \\"&gt;\\";
        break;
      default:
        continue;
    }
    c !== r && (s += a.substring(c, r)), (c = r + 1), (s += n);
  }
  return c !== r ? s + a.substring(c, r) : s;
}
var pug_match_html = /[\\"&<>]/;
function pug_rethrow(n, e, t, r) {
  if (!(n instanceof Error)) throw n;
  if (!((\\"undefined\\" == typeof window && e) || r))
    throw ((n.message += \\" on line \\" + t), n);
  try {
    r = r || require(\\"fs\\").readFileSync(e, \\"utf8\\");
  } catch (e) {
    pug_rethrow(n, null, t);
  }
  var a = 3,
    i = r.split(\\"\\\\n\\"),
    o = Math.max(t - a, 0),
    h = Math.min(i.length, t + a),
    a = i
      .slice(o, h)
      .map(function(n, e) {
        var r = e + o + 1;
        return (r == t ? \\"  > \\" : \\"    \\") + r + \\"| \\" + n;
      })
      .join(\\"\\\\n\\");
  n.path = e;
  try {
    n.message = (e || \\"Pug\\") + \\":\\" + t + \\"\\\\n\\" + a + \\"\\\\n\\\\n\\" + n.message;
  } catch (n) {}
  throw n;
}
function template(locals) {
  var pug_html = \\"\\",
    pug_mixins = {},
    pug_interp;
  var pug_debug_filename, pug_debug_line;
  try {
    var self = locals || {};
    pug_debug_line = 1;
    pug_html = pug_html + '\\\\u003Cdiv class=\\"bar\\"\\\\u003E';
    pug_debug_line = 1;
    pug_html =
      pug_html +
      pug_escape(null == (pug_interp = self.foo) ? \\"\\" : pug_interp) +
      \\"\\\\u003C\\\\u002Fdiv\\\\u003E\\";
  } catch (err) {
    pug_rethrow(err, pug_debug_filename, pug_debug_line);
  }
  return pug_html;
}
module.exports = template;
"
`;
